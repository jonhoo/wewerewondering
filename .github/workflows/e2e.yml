# This is a dedicated workflow for the end-to-end test suite, which requires a browser
# and static assets setup as well as launching a DynamoDB Local service process.
#
# We serve the `wewerewondering` client-side rendered application with our axum app
# (which we only use for data API in production environment), then open the application
# and perform certain actions impersonating both sides - a host and a guest - as befits
# a decent puppet show.
permissions:
  contents: read
on:
  push:
    branches:
      - main
      - end-to-end
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: e2e
env:
  WEBDRIVER_PORT: 4444
  NODE_VERSION: 22
  AWS_ACCESS_KEY_ID: carpe
  AWS_SECRET_ACCESS_KEY: diem
  AWS_DEFAULT_REGION: dead-poets-society-eu-east-1
  VITE_HOST_POLL_INTERVAL: 1000
  VITE_GUEST_POLL_INTERVAL: 1000
  USE_DYNAMODB: local
  HEADLESS: 1
  WAIT_TIMEOUT: 10
  HOST_CACHE_CONTROL_MAX_AGE: 0
  GUEST_CACHE_CONTROL_MAX_AGE: 0
jobs:
  test:
    runs-on: ubuntu-latest
    name: ubuntu-latest / stable
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - uses: ./.github/actions/local-dynamo
      - uses: ./.github/actions/client
      - name: Launch web driver in background
        run: chromedriver --port=${{ env.WEBDRIVER_PORT}} &
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Run end-to-end tests
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd server && cargo t --release --test e2e --features e2e-test

  awslike:
    runs-on: ubuntu-latest
    name: aws-sam
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/local-dynamo
      - uses: ./.github/actions/client
      - name: Launch web driver in background
        run: chromedriver --port=${{ env.WEBDRIVER_PORT}} &
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: cargo install cargo-lambda
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-lambda@1
      - name: Install zig for cargo-lambda
        run: sudo snap install zig --classic --beta
      - run: sam build
      - run: sam local start-api &
      - run: sleep 3
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Run end-to-end tests
        env:
          BACKEND_URL: http://localhost:3000
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd server && cargo t --release --test e2e --features e2e-test


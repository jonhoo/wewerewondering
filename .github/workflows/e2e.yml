# This is a dedicated workflow for the end-to-end test suite, which requires a browser
# and static assets setup as well as launching a DynamoDB Local service process.
#
# We serve the `wewerewondering` client-side rendered application with our axum app
# (which we only use for data API in production environment), then open the applcation
# and perform certain actions impersonating both sides - a host and a guest - as befits
# a decent puppet show.
permissions:
  contents: read
on:
  push:
    branches:
      - main
      - end-to-end
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: e2e
jobs:
  test:
    runs-on: ubuntu-latest
    name: ubuntu-latest / stable / tls
    defaults:
      run:
        working-directory: ./server
    env:
      WEBDRIVER_PORT: 4444
      NODE_VERSION: 18
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
        ############################### DATABASE ###############################
      - name: Download DynamoDB Local
        run: |
          wget https://d1ni2b6xgvw0s0.cloudfront.net/v2.x/dynamodb_local_latest.tar.gz
          wget https://d1ni2b6xgvw0s0.cloudfront.net/v2.x/dynamodb_local_latest.tar.gz.sha256
          sha256sum --check dynamodb_local_latest.tar.gz.sha256
          mkdir dynamodb-local
          tar xfv dynamodb_local_latest.tar.gz --directory=dynamodb-local
          ls -lah dynamodb-local
      - name: Install Java SDK
        uses: actions/setup-java@v4
        with:
          distribution: "oracle"
          java-version: "21"
      - name: Launch DynamoDB Local
        run: |
          cd dynamodb-local
          java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb &
      - name: Create tables and indexes in DynamoDb Local
        run: ./run-migrations.sh http://localhost:8000
        env:
          AWS_ACCESS_KEY_ID: carpe
          AWS_SECRET_ACCESS_KEY: diem
          AWS_DEFAULT_REGION: dead-poets-society-eu-east-1
        ############################### BROWSER ################################
      - name: Install browser engine and web driver
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 132
          install-chromedriver: true
      - name: Launch web driver in background
        run: chromedriver --port=${{ env.WEBDRIVER_PORT}} &
        ############################### FRONT-END ##############################
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: client/package-lock.json
      - name: Prepare front-end distribution
        run: |
          cd ../client
          npm ci
          npm run build
        ############################### BACK-END ###############################
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Run end-to-end tests
        env:
          USE_DYNAMODB: local
          HEADLESS: 1
        run: cargo t --release --test e2e --features e2e-test
